@page "/PunchItems"
@using MediatR
@using Microsoft.EntityFrameworkCore
@using MudBlazor
@using Newtonsoft.Json
@using Oprim.Application.Interfaces
@using Oprim.Application.Patterns.Quality.PunchItems.Queries.GetPunches
@using Oprim.Domain.Entities.Quality
@using Oprim.Ui.Components.Shared.Dialogs
@using Oprim.Ui.Components.Shared.Dialogs.PunchItems
@rendermode InteractiveServer
<HeadContent>
    <style>
        .mud-input > input.mud-input-root-outlined, div.mud-input-slot.mud-input-root-outlined {
            padding: 10.5px 14px !important;
        }

        .mud-table-pagination {
            display: flex;
            justify-content: center;
        }

        .mud-table-pagination-toolbar {
            border-top: none;
        }

        .mud-dialog .mud-dialog-content {
            padding: 0px !important;
        }

        .mud-dialog .mud-dialog-title {
            padding: 5px 15px !important;
        }
    </style>
</HeadContent>
<MudThemeProvider/>
<MudPopoverProvider/>
<MudDialogProvider/>
<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-6">
    <MudPaper Elevation="1" Class="p-4 rounded-2xl" Style="box-shadow: none">

        <MudTable Items="@_items"
                  Hover="true"
                  Dense="true"
                  Filter="new Func<PunchItem,bool>(FilterFunc1)"
                  @bind-SelectedItem="selectedItem1"
                  Class="w-100"
                  Loading="@_loading">

            <LoadingContent>
                <div class="d-flex flex-column align-items-center justify-content-center p-5">
                    <MudProgressCircular Color="Color.Primary" Indeterminate="true" Size="Size.Medium"/>
                    <MudText Typo="Typo.subtitle1" Class="mt-2 text-center text-secondary">
                        در حال بارگذاری داده‌ها...
                    </MudText>
                </div>
            </LoadingContent>

            <ToolBarContent>
                <div>
                    <MudTextField @bind-Value="searchString1"
                                  Placeholder="جستجو..."
                                  Adornment="Adornment.Start"
                                  AdornmentIcon="@Icons.Material.Filled.Search"
                                  Class="mx-2"
                                  Variant="Variant.Outlined"/>
                </div>

                <MudButton Color="Color.Primary"
                           StartIcon="@Icons.Material.Filled.Add"
                           Variant="Variant.Filled"
                           Class="rounded-lg"
                           OnClick="CreateItem">
                    افزودن
                </MudButton>
                <MudSpacer/>
                <MudText Typo="Typo.h6" Class="font-weight-bold">Punch Items</MudText>
            </ToolBarContent>

            <HeaderContent>
                <MudTh>شناسه</MudTh>
                <MudTh>یادداشت</MudTh>
                <MudTh>نام پروژه</MudTh>
                <MudTh>زمان ایجاد</MudTh>
                <MudTh>لینک مخالف</MudTh>
                <MudTh>عملیات</MudTh>
            </HeaderContent>

            <RowTemplate>
                <MudTd DataLabel="Id">@context.Id</MudTd>
                <MudTd DataLabel="Notes">@context.Notes</MudTd>
                <MudTd DataLabel="Notes">@context.Project.Name</MudTd>
                <MudTd DataLabel="CreateTime">@context.CreatePersianTime</MudTd>
                <MudTd DataLabel="OpponentLinks">@context.OpponentLinks</MudTd>
                <MudTd DataLabel="Actions" Class="text-nowrap">
                    <MudIconButton Icon="@Icons.Material.Filled.Edit"
                                   Color="Color.Info"
                                   OnClick="@(() => EditItem(context))"/>
                    <MudIconButton Icon="@Icons.Material.Filled.Delete"
                                   Color="Color.Error"/>
                </MudTd>
            </RowTemplate>

            <NoRecordsContent>
                <MudText Class="text-right pr-4 my-3" Typo="Typo.body1" Color="Color.Secondary">
                    آیتمی ثبت نشده است.
                </MudText>
            </NoRecordsContent>

            <PagerContent>
                <MudTablePager/>
            </PagerContent>
        </MudTable>
    </MudPaper>
</MudContainer>

@code {
    [Inject] IUnitOfWork _ofWork { get; set; } = default!;
    [Inject] IMediator Mediator { get; set; } = default!;
    [Inject] IDialogService DialogService { get; set; } = default!;

    private string searchString1 = "";
    private PunchItem? selectedItem1;
    private List<PunchItem> _items = [];
    private bool _loading = true; // ← فلگ لودینگ

    private async Task LoadData()
    {
        try
        {
            _loading = true;
            await Task.Delay(100);
            _items = await Mediator.Send(new GetPunchesQuery());
            Console.WriteLine(_items.Count);
        }
        finally
        {
            _loading = false;
        }

        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task CreateItem()
    {
        var parameters = new DialogParameters { ["Item"] = null };
        var dialog = DialogService.Show<PunchItemDialog>("", parameters);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            var newItem = (PunchItem)result.Data!;
            await _ofWork.GenericRepository<PunchItem>().AddAsync(newItem, CancellationToken.None);
            _items.Add(newItem);
            await LoadData();
        }
    }

    private async Task EditItem(PunchItem item)
    {
        var parameters = new DialogParameters { ["Item"] = item };
        var dialog = DialogService.Show<PunchItemDialog>("", parameters);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            var updated = (PunchItem)result.Data!;
            await _ofWork.GenericRepository<PunchItem>().UpdateAsync(updated, CancellationToken.None);
            var index = _items.FindIndex(x => x.Id == updated.Id);
            if (index >= 0) _items[index] = updated;
            await LoadData();
        }
    }

    private bool FilterFunc1(PunchItem element) =>
        string.IsNullOrWhiteSpace(searchString1) ||
        element.Notes.Contains(searchString1, StringComparison.OrdinalIgnoreCase);

}
