@page "/PunchItems"
@using MudBlazor
@rendermode InteractiveServer
<MudTable Items="@Elements" Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped" 
          Filter="new Func<Element,bool>(FilterFunc1)" @bind-SelectedItem="selectedItem1" Style="direction: rtl">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Periodic Elements</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString1" Placeholder="Search" 
                      Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" 
                      IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>

    <HeaderContent>
        <MudTh>Nr</MudTh>
        <MudTh>Sign</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Position</MudTh>
        <MudTh>Molar mass</MudTh>
    </HeaderContent>

    <RowTemplate>
        <MudTd DataLabel="Nr">@context.Number</MudTd>
        <MudTd DataLabel="Sign">@context.Sign</MudTd>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Position">@context.Position</MudTd>
        <MudTd DataLabel="Molar mass">@context.Molar</MudTd>
    </RowTemplate>

    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>


@code {
    private bool dense = false;
    private bool hover = true;
    private bool striped = false;
    private bool bordered = false;
    private string searchString1 = "";
    private Element? selectedItem1;
    private IEnumerable<Element> Elements = new List<Element>();

    protected override void OnInitialized()
    {
        // ✅ دیتا به صورت محلی (بدون API)
        Elements = new List<Element>
        {
            new Element { Number = 1, Sign = "H", Name = "Hydrogen", Position = 1, Molar = 1.008 },
            new Element { Number = 2, Sign = "He", Name = "Helium", Position = 18, Molar = 4.0026 },
            new Element { Number = 3, Sign = "Li", Name = "Lithium", Position = 1, Molar = 6.94 },
            new Element { Number = 4, Sign = "Be", Name = "Beryllium", Position = 2, Molar = 9.0122 },
            new Element { Number = 5, Sign = "B", Name = "Boron", Position = 13, Molar = 10.81 },
            new Element { Number = 6, Sign = "C", Name = "Carbon", Position = 14, Molar = 12.011 },
            new Element { Number = 7, Sign = "N", Name = "Nitrogen", Position = 15, Molar = 14.007 },
            new Element { Number = 8, Sign = "O", Name = "Oxygen", Position = 16, Molar = 15.999 },
            new Element { Number = 9, Sign = "F", Name = "Fluorine", Position = 17, Molar = 18.998 },
            new Element { Number = 10, Sign = "Ne", Name = "Neon", Position = 18, Molar = 20.180 }
        };
    }

    private bool FilterFunc1(Element element) => FilterFunc(element, searchString1);

    private bool FilterFunc(Element element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Sign.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{element.Number} {element.Position} {element.Molar}".Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

    // ✅ مدل داده‌ها
    public class Element
    {
        public int Number { get; set; }
        public string Sign { get; set; }
        public string Name { get; set; }
        public int Position { get; set; }
        public double Molar { get; set; }
    }
}
